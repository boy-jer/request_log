= Request Log - Logging of web requests to MongoDB

Request Log is a Rack middleware for logging web requests to MongoDB.

== Installation

Add gem dependencies with appropriate version numbers to your Gemfile (assuming you use Bundler):

gem 'mongo', '~> <latest-version-here>'
gem 'bson_ext', '~> <latest-version-here>'
gem 'request_log', :git => "http://github.com/peter/request_log.git"

Install with:

bundle install

Note that it's up to your application how it wants to connect to Mongo DB (if at all) and the suggested
mongo and bson_ext gems are just suggestions.

Next you need to setup a Mongo DB connection. Here is a MongoHQ example that in Rails could end up in config/initializers/request_log.rb:

if ENV['MONGOHQ_URL']
	require 'uri'
	require 'mongo'      
	uri = URI.parse(ENV['MONGOHQ_URL'])
	connection = Mongo::Connection.from_uri(uri.to_s)
	RequestLog::Db.mongo_db = connection.db(uri.path.gsub(/^\//, ''))
end

Now setup the Middleware in your config.ru file:

use RequestLog::Middleware

Here is an example of how you can customize the middleware:

use RequestLog::Middleware,
	:logger => lambda { |data| ::RequestLog::Db.requests.insert(data.attributes.except(:summary)) },
	:timeout => 0.5

In order to use the Rake tasks you need to make sure you have the Mongo DB connection setup and that you
require the tasks in your Rakefile, like this:

require 'request_log'
require 'config/initializers/request_log.rb' # The file where you setup the mongo db connection
require 'request_log/tasks'

== Accessing the logs

You can tail the log like this:

rake request_log:tail

If you want to query the log and print a certain time period you can use request_log:print:

rake request_log:print from="2010-10-28 17:06:08" to="2010-10-28 17:06:10" conditions='status: 200'

If you are using MONGOHQ, remember to set the MONGOHQ_URL environment variable.
